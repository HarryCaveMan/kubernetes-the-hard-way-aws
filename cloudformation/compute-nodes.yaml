AWSTemplateFormatVersion: "2010-09-09"
Description: Template for Kubernetes Compute Nodes

Parameters:
  TargetGroupArns:
    Type: CommaDelimitedList
    Description: The arn of the Load Balancer TargetGroup to attach to our nodes
  PlacementGroup:
    Type: String
    Description: Placement group for all nodes in out kube cluster (worker and control plane)
  AmiId:
    Type: String
    Description: The Amazon Machine Image (AMI) ID to use (this is the entire OS image)
  NodeType:
    Type: String
    Description: Node type, must be controller|worker
    AllowedValues:
      - controller
      - worker

Conditions:
  IsController:
    !Equals [!Ref NodeType,controller]

Resources:
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
  Properties: 
    LaunchTemplateData: 
      LaunchTemplateName: !Sub kubernetes-${NodeType}-node
      ImageId: !Ref AmiId
      BlockDeviceMappings: 
      - DeviceName: /dev/sda1 
        Ebs: 
          VolumeSize: 50
          VolumeType: gp3
          Iops: 3000
        NoDevice: ''  
      EbsOptimized: true
      InstanceType: t3.micro
      KeyName: !Ref KeyName
      Placement:
        GroupName: !Ref PlacementGroup
      # Could use a macro to generate more if clusters become large or if n_workers != n_controllers
      NetworkInterfaces: 
        -  PrivateIpAddress: !If [IsController,'10.0.1.10','10.0.1.20']
        -  PrivateIpAddress: !If [IsController,'10.0.1.11','10.0.1.21']
        -  PrivateIpAddress: !If [IsController,'10.0.1.12','10.0.1.22']
      SecurityGroupIds: !Ref SecurityGroups
      UserData: !Sub
        !Base64 |
          cat > calculate-launch-index.py <<EOF
          import urllib.request
          node_type = ${NodeType}
          with urllib.request.urlopen('http://169.254.169.254/latest/meta-data/local-ipv4') as res:
              instance_ipv4:str = response.read()
          final_octet:str = instance_ipv4.split(".")[-1]
          launch_index:str = final_octet[-1]
          print(f'{node_type}-{launch_index}')
          EOF

          chmod +x claulate-lauunch-index.py
          name=`python3 calculate-launch-index.py`

  NodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      AutoScalingGroupName: kubernetes-nodes
      AvailabilityZones: 
        - us-east-1
      PlacementGroup: !Ref PlacementGroup
      TargetGroupARNs: !Ref TargetGroupArns
      DesiredCapacity: '3'
      LaunchTemplate: 
        LaunchTemplateSpecification
      MaxSize: '3'
      MinSize: '3'
      Tags: 
        - Key: Name
          Value: kubernetes-the-hard-way

Outputs: